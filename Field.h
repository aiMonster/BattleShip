#include "Ship.h"

//клас поля бою
class Field_Sample
{
	protected:
		char my_field[18][18]; //поле  з кораблями
		char opponent_field[18][18]; //поле для стрільби в кораблі
	public:
		Field_Sample(); //конструктор для заповнення масиву елементами поля
		
		void display(int wh) const; //функція для відображення: 1 - поля з кораблями, 2 - поля для стрільби
		char element (CO cor); //повертає елемент на певній координаті
		//void test_disp(void); //друкує всі елементи масиву
};


//клас поля бою уже з кораблями
class Field : public Field_Sample
{
	private:		
		//об'єкти кораблів
		Ship deck_4;
		Ship deck_3[2];
		Ship deck_2[3];
		Ship deck_1[4];
	public:
		//////////// функції які потрібні користувачу ///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		bool is_alive(void) const;//перевіряємо чи всі кораблі живі (0 - якщо всі кораблі вбито)
		
		bool shoot(Field*);//здійснення пострілу - передаємо об'єкт в який стріляємо 
		//повертає 1 - дати користувачу ще один шанс у випадку якщо той поцілив або двічі вистрілив в одне і те ж місце, 0 - мимо
		//також виводить на екран текст у якому вказано чи поранено, вбито, мимо, двічі в ту ж координату
		
		bool rand_shot(Field*);
		
		//розставити кораблі
		void put_ships(bool); // 0 - самому, 1 - рандомно
		
		// void display(int wh) const; //функція для відображення: 1 - поля з кораблями, 2 - поля для стрільби
		
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		Field(); //конструктор для задання кораблям довжини
		
		int belong(CO, Field*);//перевіряємо куди ми попали на полі у опонента (передаємо координату)
		//а також передаємо себе, щоб якщо ми вбили опонента нам обгородився корабель пустими клітками для зручності
		
		CO ask_co(void);//запитуємо у користувача координати для пострілу
		
		void surround(Ship, Field*);//якщо корабель вбито то оточуємо собі для зручності, щоб дурно не стріляти
		//приймає корабель який оточуємо а також об'єкт на якому будем оточувати
		
		void change_my_to(int, CO);//змінює певну координату на відповідний символ
		void change_op_to(int, CO);//1 - DEAD, 0 - EMPTY
		
		///////// rand_shot ///////////////
			CO rand_co(void);
			int do_it(Field*, CO);
			bool is_clear(Field*, int, int);
		//////////////////////////////////
							
		
		//для розстановки кораблів
			bool check_rotation(int, int, CO); //перевіряє чи там може бути корабель (довжина, напрям, координати)
			//1 - можна, 2 - ні
			
			bool putting(int, int, CO, int); //ставить 1 корабель (напрямок, довжина, координати, порядковий номер)
			//якщо корабель успішно поставлено повертає 1, якщо перевірку було завалено то повертає 0
};

	
